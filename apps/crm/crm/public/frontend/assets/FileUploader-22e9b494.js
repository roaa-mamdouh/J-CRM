import{_ as u,b as h,c as f,e as c,Q as g,a8 as m,a9 as _}from"./index-94cddbf2.js";class F{constructor(){this.listeners={},this.failed=!1}on(e,s){this.listeners[e]=this.listeners[e]||[],this.listeners[e].push(s)}trigger(e,s){(this.listeners[e]||[]).forEach(l=>{l.call(this,s)})}upload(e,s){return new Promise((n,l)=>{let t=new XMLHttpRequest;t.upload.addEventListener("loadstart",()=>{this.trigger("start")}),t.upload.addEventListener("progress",i=>{i.lengthComputable&&this.trigger("progress",{uploaded:i.loaded,total:i.total})}),t.upload.addEventListener("load",()=>{this.trigger("finish")}),t.addEventListener("error",()=>{this.trigger("error"),l()}),t.onreadystatechange=()=>{if(t.readyState==XMLHttpRequest.DONE){let i;if(t.status===200){let d=null;try{d=JSON.parse(t.responseText)}catch{d=t.responseText}let p=d.message||d;n(p)}else if(t.status===403)i=JSON.parse(t.responseText);else{this.failed=!0;try{i=JSON.parse(t.responseText)}catch{}}i&&i.exc&&console.error(JSON.parse(i.exc)[0]),l(i)}};const o=s.upload_endpoint||"/api/method/upload_file";t.open("POST",o,!0),t.setRequestHeader("Accept","application/json"),window.csrf_token&&window.csrf_token!=="{{ csrf_token }}"&&t.setRequestHeader("X-Frappe-CSRF-Token",window.csrf_token);let a=new FormData;e&&a.append("file",e,e.name),a.append("is_private",s.private?"1":"0"),a.append("folder",s.folder||"Home"),s.file_url&&a.append("file_url",s.file_url),s.doctype&&a.append("doctype",s.doctype),s.docname&&a.append("docname",s.docname),s.fieldname&&a.append("fieldname",s.fieldname),s.method&&a.append("method",s.method),s.type&&a.append("type",s.type),t.send(a)})}}const y={name:"FileUploader",props:{fileTypes:{type:[String,Array]},uploadArgs:{type:Object},validateFile:{type:Function,default:null}},data(){return{uploader:null,uploading:!1,uploaded:0,error:null,message:"",total:0,file:null,finishedUploading:!1}},computed:{progress(){let r=Math.floor(this.uploaded/this.total*100);return isNaN(r)?0:r},success(){return this.finishedUploading&&!this.error}},methods:{inputRef(){return this.$refs.input},openFileSelector(){this.$refs.input.click()},async onFileAdd(r){if(this.error=null,this.file=r.target.files[0],this.file&&this.validateFile)try{let e=await this.validateFile(this.file);e&&(this.error=e)}catch(e){this.error=e}this.error||this.uploadFile(this.file)},async uploadFile(r){this.error=null,this.uploaded=0,this.total=0,this.uploader=new F,this.uploader.on("start",()=>{this.uploading=!0}),this.uploader.on("progress",e=>{this.uploaded=e.uploaded,this.total=e.total}),this.uploader.on("error",()=>{this.uploading=!1,this.error="Error Uploading File"}),this.uploader.on("finish",()=>{this.uploading=!1,this.finishedUploading=!0}),this.uploader.upload(r,this.uploadArgs||{}).then(e=>{this.$emit("success",e)}).catch(e=>{this.uploading=!1;let s="Error Uploading File";e!=null&&e._server_messages?s=JSON.parse(JSON.parse(e._server_messages)[0]).message:e!=null&&e.exc&&(s=JSON.parse(e.exc)[0].split(`
`).slice(-2,-1)[0]),this.error=s,this.$emit("failure",e)})}},expose:["inputRef"]},S=["accept"];function v(r,e,s,n,l,t){return h(),f("div",null,[c("input",{ref:"input",type:"file",accept:s.fileTypes,class:"hidden",onChange:e[0]||(e[0]=(...o)=>t.onFileAdd&&t.onFileAdd(...o))},null,40,S),g(r.$slots,"default",m(_({file:l.file,uploading:l.uploading,progress:t.progress,uploaded:l.uploaded,message:l.message,error:l.error,total:l.total,success:t.success,openFileSelector:t.openFileSelector})))])}const N=u(y,[["render",v]]);export{N as F};
//# sourceMappingURL=FileUploader-22e9b494.js.map
