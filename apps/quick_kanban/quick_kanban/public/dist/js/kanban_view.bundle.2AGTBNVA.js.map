{
  "version": 3,
  "sources": ["../../../../../apps/quick_kanban/quick_kanban/public/js/kanban_view.bundle.js"],
  "sourcesContent": ["\nfrappe.provide(\"frappe.views\");\n\nlet kanban_conf = frappe.call({\n    method: \"quick_kanban.get_beta _users.get_kanban_config\",\n    callback: function (r) {\n        if (!r.exc && r.message) {\n            kanban_conf = r.message\n        }\n    }\n});\n\nfrappe.views.KanbanView = class KanbanView extends frappe.views.KanbanView {\n\n    render() {\n        if (!kanban_conf.kanban_beta) {\n            this.renderOld()\n            return\n        }\n        if (kanban_conf.kanban_beta_users) {\n            if (kanban_conf.kanban_beta_users.includes(frappe.session.user)) {\n                this.renderBeta()\n            }\n            else {\n                this.renderOld()\n            }\n        }\n        else {\n            this.renderBeta()\n        }\n    }\n\n    renderBeta() {\n        if (!window.refreshKanbanBoard) {\n            const script = document.createElement('script');\n            script.src = '/assets/quick_kanban/js/quick_kanban.bundle.js';\n            document.head.appendChild(script);\n            this.$result.html(`<div id=\"kanbanapp\"></div>`);\n        } else {\n            if (window.refreshKanbanBoard) {\n                let args = this.get_args();\n                window.refreshKanbanBoard(args);\n            }\n        }\n    }\n\n    renderOld() {\n        const board_name = this.board_name;\n        if (!this.kanban) {\n            this.kanban = new frappe.views.KanbanBoard({\n                doctype: this.doctype,\n                board: this.board,\n                board_name: board_name,\n                cards: this.data,\n                card_meta: this.card_meta,\n                wrapper: this.$result,\n                cur_list: this,\n                user_settings: this.view_user_settings,\n            });\n        } else if (board_name === this.kanban.board_name) {\n            this.kanban.update(this.data);\n        }\n    }\n}\n"],
  "mappings": ";;AACA,SAAO,QAAQ,cAAc;AAE7B,MAAI,cAAc,OAAO,KAAK;AAAA,IAC1B,QAAQ;AAAA,IACR,UAAU,SAAU,GAAG;AACnB,UAAI,CAAC,EAAE,OAAO,EAAE,SAAS;AACrB,sBAAc,EAAE;AAAA,MACpB;AAAA,IACJ;AAAA,EACJ,CAAC;AAED,SAAO,MAAM,aAAa,MAAM,mBAAmB,OAAO,MAAM,WAAW;AAAA,IAEvE,SAAS;AACL,UAAI,CAAC,YAAY,aAAa;AAC1B,aAAK,UAAU;AACf;AAAA,MACJ;AACA,UAAI,YAAY,mBAAmB;AAC/B,YAAI,YAAY,kBAAkB,SAAS,OAAO,QAAQ,IAAI,GAAG;AAC7D,eAAK,WAAW;AAAA,QACpB,OACK;AACD,eAAK,UAAU;AAAA,QACnB;AAAA,MACJ,OACK;AACD,aAAK,WAAW;AAAA,MACpB;AAAA,IACJ;AAAA,IAEA,aAAa;AACT,UAAI,CAAC,OAAO,oBAAoB;AAC5B,cAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,eAAO,MAAM;AACb,iBAAS,KAAK,YAAY,MAAM;AAChC,aAAK,QAAQ,KAAK,4BAA4B;AAAA,MAClD,OAAO;AACH,YAAI,OAAO,oBAAoB;AAC3B,cAAI,OAAO,KAAK,SAAS;AACzB,iBAAO,mBAAmB,IAAI;AAAA,QAClC;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,YAAY;AACR,YAAM,aAAa,KAAK;AACxB,UAAI,CAAC,KAAK,QAAQ;AACd,aAAK,SAAS,IAAI,OAAO,MAAM,YAAY;AAAA,UACvC,SAAS,KAAK;AAAA,UACd,OAAO,KAAK;AAAA,UACZ;AAAA,UACA,OAAO,KAAK;AAAA,UACZ,WAAW,KAAK;AAAA,UAChB,SAAS,KAAK;AAAA,UACd,UAAU;AAAA,UACV,eAAe,KAAK;AAAA,QACxB,CAAC;AAAA,MACL,WAAW,eAAe,KAAK,OAAO,YAAY;AAC9C,aAAK,OAAO,OAAO,KAAK,IAAI;AAAA,MAChC;AAAA,IACJ;AAAA,EACJ;",
  "names": []
}
